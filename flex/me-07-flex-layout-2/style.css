/* a good template for a grid using flexbox */

body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    margin: 0px;
    min-height: 100vh;

    /* solution has display: flex and flex-direction: column. I didn't do columns yet mine still showed as a grid */
    /* solution also has a body class which on mine is content class. Their body class is not at the body tag. Instead 
    it is between the header class and sidebar class. */
}

.header {
    height: 72px;
    background: darkmagenta;
    color: white;
    font-size: 32px; /* matches solution */
    font-weight: 900; /* matches solution */
    padding-left: 16px; /* solution has padding: 0 16 */
    display: flex;  /* matches solution */
    align-items: center; /* matches solution */
}

.footer { /* matches the solution */
    height: 72px;
    background: #eee;
    color: darkmagenta;
    display: flex;
    align-items: center;
    justify-content: center;
}

.content { 
    display: flex; /* solution uses .body where my .content is */
    /* the display matches but theirs also has flex: 1 */
}

.sidebar {
    width: 300px;
    background: royalblue;
    flex: none; /* this keeps the width fixed */ /* solution uses flex-shrink: 0 */
    align-items: flex-start;
    padding: 16px;
}

ul {
    list-style-type: none; /* removes the bullet points */
    margin: 0px; /* was missing in mine. added from the solution */
    padding: 0px; /* was missing in mine. added from the solution */
}

li {
    margin-bottom: 16px; /* was missing in mine. added from the solution */
}

a {  /* matches the solution */
    font-size: 24px;
    color: white;
    text-decoration: none; /* removes the underline */
}

.card-group { /* flex container for the cards */  /* solution uses .container */
    width: 1200px;
    display: flex; /* matches solution */
    flex-wrap: wrap; /* this makes it wrap to the next row when it runs out of space.  the .card-group declaration 
    is what will make it look like a grid of fixed card sizes */ /* matches solution */ 
    /* theirs uses flex-direction: column for the entire body tag which includes header/footer, sidebar, the cards etc. 
    then each div for those sections are then flexed sideways with some having flex-wrap so it looks like a grid. */
    justify-content: center;
    padding: 32px; /* matches solution */
    gap: 30px;
}

.card-group>* {  /* selecting all direct descendants of the card-group. the 0 0 40% makes it so it won't flex or shrink 
    and makes it appear as each card is in a fixed grid format. mozilla docs say grid should be used in these situations 
    instead of flexbox */
    flex: 0 0 40%;
    
}
.card {
    border: 1px solid #eee;
    box-shadow: 2px 4px 16px rgba(0,0,0,.06);
    border-radius: 4px;
    padding: 20px 20px 160px 20px; 
    
    /* the solution adds margin, padding and width. mine uses flex 0 0 40% and different padding to make it appear as 
    a grid of cards */
}